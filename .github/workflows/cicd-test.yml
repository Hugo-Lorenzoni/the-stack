name: Deploy to Test VM

on:
  push:
    branches:
      - test

jobs:
  deploy:
    runs-on: [self-hosted, test]
    environment: TEST

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install PM2
        run: npm install -g pm2

      - name: Install dependencies
        run: npm install

      - name: Get environment variables
        run: |
          touch .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
          echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> .env
          echo "DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}" >> .env
          echo "ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "UPLOAD_FOLDER=${{ secrets.UPLOAD_FOLDER }}" >> .env

      - name: Deploy database
        run: docker compose -f docker-compose.test.yml up -d --force-recreate

      - name: Generate Prisma client
        run: npx prisma db push

      - name: Build project
        run: npm run build

      - name: Restart PM2
        run: pm2 restart ecosystem.config.js

      - name: Make sure PM2 starts on boot
        run: pm2 startup

      - name: Save PM2 process list
        run: pm2 save
