name: Deploy to Test VM

on:
  push:
    branches:
      - test

env:
  DEPLOYMENT_FOLDER: "site-cpv"

jobs:
  deploy-test:
    runs-on: [self-hosted, test]
    environment: TEST

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci
      - name: Get environment variables
        run: |
          touch .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
          echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> .env
          echo 'DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}' >> .env
          echo "ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "DATA_FOLDER=${{ secrets.DATA_FOLDER }}" >> .env

      - name: Create folders
        run: |
          mkdir -p ${{ secrets.DATA_FOLDER }}/photos
          mkdir -p ${{ secrets.DATA_FOLDER }}/json
      - name: Copy public assets
        run: cp -r ./public/* ${{ secrets.DATA_FOLDER }}/photos/

      - name: Copy json files if they do not exist
        run: |
          if [ ! -f ${{ secrets.DATA_FOLDER }}/json/comite.json ]; then
            cp ./src/data/comite.json ${{ secrets.DATA_FOLDER }}/json/
          fi
          if [ ! -f ${{ secrets.DATA_FOLDER }}/json/text-intro.json ]; then
            cp ./src/data/text-intro.json ${{ secrets.DATA_FOLDER }}/json/
          fi

      - name: Deploy database
        run: docker compose -f docker-compose.test.yml up -d --force-recreate

      - name: Push changes to the db and generate Prisma client
        uses: nick-fields/retry@v3
        with:
          timeout_seconds: 15
          max_attempts: 3
          retry_on: error
          command: npx prisma db push

      - name: Build project
        run: npm run build

      - name: Create folders for deployment
        run: |
          mkdir -p $HOME/${{ env.DEPLOYMENT_FOLDER }}
          mkdir -p $HOME/${{ env.DEPLOYMENT_FOLDER }}/.next
          mkdir -p $HOME/${{ env.DEPLOYMENT_FOLDER }}/public

      - name: Copy build files to deployment folder
        run: cp -r ./.next/* $HOME/${{ env.DEPLOYMENT_FOLDER }}/.next

      - name: Copy public assets to deployment folder
        run: cp -r ./public/* $HOME/${{ env.DEPLOYMENT_FOLDER }}/public

      - name: Copy ecosystem config to deployment folder
        run: cp ./ecosystem.config.js $HOME/${{ env.DEPLOYMENT_FOLDER }}

      - name: Restart PM2
        run: cd $HOME/${{ env.DEPLOYMENT_FOLDER }} && pm2 restart ecosystem.config.js

      - name: Save PM2 process list
        run: pm2 save
